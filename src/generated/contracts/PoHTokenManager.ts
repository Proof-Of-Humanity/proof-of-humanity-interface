/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";

export interface PoHTokenManagerInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "addMemberBack"
      | "changeGCT"
      | "changeGovernor"
      | "changeHub"
      | "changePoH"
      | "confirmHuman"
      | "confirmHumanToken"
      | "confirmToken"
      | "executeGovernorTx"
      | "gct"
      | "governor"
      | "hub"
      | "poh"
      | "pohIdToToken"
      | "redeem(address,address,uint256)"
      | "redeem(address,uint256)"
      | "redeemMany"
      | "removeMember"
      | "removedMember"
      | "setup"
      | "tokenToPohId"
      | "trust"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "HumanConfirmed"
      | "MemberAdded"
      | "MemberRemoved"
      | "Redeemed"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "addMemberBack",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "changeGCT",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "changeGovernor",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "changeHub",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "changePoH",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "confirmHuman",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "confirmHumanToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "confirmToken",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "executeGovernorTx",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "gct", values?: undefined): string;
  encodeFunctionData(functionFragment: "governor", values?: undefined): string;
  encodeFunctionData(functionFragment: "hub", values?: undefined): string;
  encodeFunctionData(functionFragment: "poh", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pohIdToToken",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "redeem(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "redeem(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemMany",
    values: [AddressLike, AddressLike[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "removeMember",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removedMember",
    values: [AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "setup", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenToPohId",
    values: [AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "trust", values: [AddressLike]): string;

  decodeFunctionResult(
    functionFragment: "addMemberBack",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "changeGCT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "changeHub", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "changePoH", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "confirmHuman",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "confirmHumanToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "confirmToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeGovernorTx",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "gct", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "governor", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hub", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "poh", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pohIdToToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeem(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeem(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "redeemMany", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removedMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setup", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenToPohId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "trust", data: BytesLike): Result;
}

export namespace HumanConfirmedEvent {
  export type InputTuple = [pohId: BytesLike, token: AddressLike];
  export type OutputTuple = [pohId: string, token: string];
  export interface OutputObject {
    pohId: string;
    token: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MemberAddedEvent {
  export type InputTuple = [pohId: BytesLike, token: AddressLike];
  export type OutputTuple = [pohId: string, token: string];
  export interface OutputObject {
    pohId: string;
    token: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MemberRemovedEvent {
  export type InputTuple = [pohId: BytesLike];
  export type OutputTuple = [pohId: string];
  export interface OutputObject {
    pohId: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RedeemedEvent {
  export type InputTuple = [
    redeemer: AddressLike,
    collateral: AddressLike,
    amount: BigNumberish
  ];
  export type OutputTuple = [
    redeemer: string,
    collateral: string,
    amount: bigint
  ];
  export interface OutputObject {
    redeemer: string;
    collateral: string;
    amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface PoHTokenManager extends BaseContract {
  connect(runner?: ContractRunner | null): BaseContract;
  attach(addressOrName: AddressLike): this;
  deployed(): Promise<this>;

  interface: PoHTokenManagerInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  addMemberBack: TypedContractMethod<[], [void], "nonpayable">;

  changeGCT: TypedContractMethod<[_gct: AddressLike], [void], "nonpayable">;

  changeGovernor: TypedContractMethod<
    [_governor: AddressLike],
    [void],
    "nonpayable"
  >;

  changeHub: TypedContractMethod<[_hub: AddressLike], [void], "nonpayable">;

  changePoH: TypedContractMethod<[_poh: AddressLike], [void], "nonpayable">;

  confirmHuman: TypedContractMethod<
    [_token: AddressLike],
    [void],
    "nonpayable"
  >;

  confirmHumanToken: TypedContractMethod<[], [void], "nonpayable">;

  confirmToken: TypedContractMethod<[_pohId: BytesLike], [void], "nonpayable">;

  executeGovernorTx: TypedContractMethod<
    [_destination: AddressLike, _data: BytesLike],
    [void],
    "nonpayable"
  >;

  gct: TypedContractMethod<[], [string], "view">;

  governor: TypedContractMethod<[], [string], "view">;

  hub: TypedContractMethod<[], [string], "view">;

  poh: TypedContractMethod<[], [string], "view">;

  pohIdToToken: TypedContractMethod<[arg0: BytesLike], [string], "view">;

  "redeem(address,address,uint256)": TypedContractMethod<
    [_redeemer: AddressLike, _collateral: AddressLike, _wad: BigNumberish],
    [void],
    "nonpayable"
  >;

  "redeem(address,uint256)": TypedContractMethod<
    [_collateral: AddressLike, _wad: BigNumberish],
    [void],
    "nonpayable"
  >;

  redeemMany: TypedContractMethod<
    [_redeemer: AddressLike, _collateral: AddressLike[], _wads: BigNumberish[]],
    [void],
    "nonpayable"
  >;

  removeMember: TypedContractMethod<[_pohId: BytesLike], [void], "nonpayable">;

  removedMember: TypedContractMethod<[arg0: AddressLike], [boolean], "view">;

  setup: TypedContractMethod<[], [void], "nonpayable">;

  tokenToPohId: TypedContractMethod<[arg0: AddressLike], [string], "view">;

  trust: TypedContractMethod<[_trustee: AddressLike], [void], "nonpayable">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "addMemberBack"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "changeGCT"
  ): TypedContractMethod<[_gct: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "changeGovernor"
  ): TypedContractMethod<[_governor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "changeHub"
  ): TypedContractMethod<[_hub: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "changePoH"
  ): TypedContractMethod<[_poh: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "confirmHuman"
  ): TypedContractMethod<[_token: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "confirmHumanToken"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "confirmToken"
  ): TypedContractMethod<[_pohId: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "executeGovernorTx"
  ): TypedContractMethod<
    [_destination: AddressLike, _data: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "gct"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "governor"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "hub"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "poh"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "pohIdToToken"
  ): TypedContractMethod<[arg0: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "redeem(address,address,uint256)"
  ): TypedContractMethod<
    [_redeemer: AddressLike, _collateral: AddressLike, _wad: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "redeem(address,uint256)"
  ): TypedContractMethod<
    [_collateral: AddressLike, _wad: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "redeemMany"
  ): TypedContractMethod<
    [_redeemer: AddressLike, _collateral: AddressLike[], _wads: BigNumberish[]],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "removeMember"
  ): TypedContractMethod<[_pohId: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "removedMember"
  ): TypedContractMethod<[arg0: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "setup"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "tokenToPohId"
  ): TypedContractMethod<[arg0: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "trust"
  ): TypedContractMethod<[_trustee: AddressLike], [void], "nonpayable">;

  getEvent(
    key: "HumanConfirmed"
  ): TypedContractEvent<
    HumanConfirmedEvent.InputTuple,
    HumanConfirmedEvent.OutputTuple,
    HumanConfirmedEvent.OutputObject
  >;
  getEvent(
    key: "MemberAdded"
  ): TypedContractEvent<
    MemberAddedEvent.InputTuple,
    MemberAddedEvent.OutputTuple,
    MemberAddedEvent.OutputObject
  >;
  getEvent(
    key: "MemberRemoved"
  ): TypedContractEvent<
    MemberRemovedEvent.InputTuple,
    MemberRemovedEvent.OutputTuple,
    MemberRemovedEvent.OutputObject
  >;
  getEvent(
    key: "Redeemed"
  ): TypedContractEvent<
    RedeemedEvent.InputTuple,
    RedeemedEvent.OutputTuple,
    RedeemedEvent.OutputObject
  >;

  filters: {
    "HumanConfirmed(bytes20,address)": TypedContractEvent<
      HumanConfirmedEvent.InputTuple,
      HumanConfirmedEvent.OutputTuple,
      HumanConfirmedEvent.OutputObject
    >;
    HumanConfirmed: TypedContractEvent<
      HumanConfirmedEvent.InputTuple,
      HumanConfirmedEvent.OutputTuple,
      HumanConfirmedEvent.OutputObject
    >;

    "MemberAdded(bytes20,address)": TypedContractEvent<
      MemberAddedEvent.InputTuple,
      MemberAddedEvent.OutputTuple,
      MemberAddedEvent.OutputObject
    >;
    MemberAdded: TypedContractEvent<
      MemberAddedEvent.InputTuple,
      MemberAddedEvent.OutputTuple,
      MemberAddedEvent.OutputObject
    >;

    "MemberRemoved(bytes20)": TypedContractEvent<
      MemberRemovedEvent.InputTuple,
      MemberRemovedEvent.OutputTuple,
      MemberRemovedEvent.OutputObject
    >;
    MemberRemoved: TypedContractEvent<
      MemberRemovedEvent.InputTuple,
      MemberRemovedEvent.OutputTuple,
      MemberRemovedEvent.OutputObject
    >;

    "Redeemed(address,address,uint256)": TypedContractEvent<
      RedeemedEvent.InputTuple,
      RedeemedEvent.OutputTuple,
      RedeemedEvent.OutputObject
    >;
    Redeemed: TypedContractEvent<
      RedeemedEvent.InputTuple,
      RedeemedEvent.OutputTuple,
      RedeemedEvent.OutputObject
    >;
  };
}
